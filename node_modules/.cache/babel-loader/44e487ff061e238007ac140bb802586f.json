{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useViewSelector = void 0;\n\nvar React = __importStar(require(\"react\"));\n/**\n * See documentation: [useViewSelector](https://justinmahar.github.io/react-use-analytics-api/useViewSelector)\n *\n * This hook renders a [ViewSelector](https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#viewselector)\n * into a container on the page using the [Google Analytics Embed API](https://justinmahar.github.io/react-use-analytics-api/useAnalyticsApi).\n *\n * The view selector can be used to change the Google Analytics view for data queries when [rendering charts](https://justinmahar.github.io/react-use-analytics-api/useDataChart).\n *\n * @param gapi The [Google Analytics Embed API](https://justinmahar.github.io/react-use-analytics-api/useAnalyticsApi). When `undefined`, nothing is rendered.\n * @param viewSelectorId The ID of the DOM element to render the view selector to.\n * @param onChange Called with the selected `viewId` whenever the view selection changes. Will be called immediately.\n */\n\n\nexports.useViewSelector = function (gapi, viewSelectorId, onChange) {\n  var _a = React.useState(),\n      viewSelector = _a[0],\n      setViewSelector = _a[1];\n\n  React.useEffect(function () {\n    if (!viewSelector && typeof gapi !== 'undefined') {\n      try {\n        /**\n         * Create a new ViewSelector instance to be rendered inside of an\n         * element with the id provided.\n         */\n        var newViewSelector = new gapi.analytics.ViewSelector({\n          container: viewSelectorId\n        }); // Render the view selector to the page.\n\n        newViewSelector.execute();\n        /**\n         * Render the dataChart on the page whenever a new view is selected.\n         */\n\n        newViewSelector.on('change', function (viewId) {\n          if (onChange) {\n            onChange(viewId);\n          }\n        });\n        setViewSelector(newViewSelector);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }, [viewSelector, viewSelectorId, onChange, gapi]);\n};","map":{"version":3,"sources":["/Users/kassimbashir/quickstart-react/node_modules/react-use-analytics-api/dist/hooks/useViewSelector.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","exports","useViewSelector","React","require","gapi","viewSelectorId","onChange","_a","useState","viewSelector","setViewSelector","useEffect","newViewSelector","analytics","ViewSelector","container","execute","on","viewId","e","console","error"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AAC5F,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBJ,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;AAAEG,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,GAAG,EAAE,YAAW;AAAE,aAAON,CAAC,CAACC,CAAD,CAAR;AAAc;AAApD,GAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACxB,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBF,EAAAA,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;AAC3FX,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;AAAEM,IAAAA,UAAU,EAAE,IAAd;AAAoBI,IAAAA,KAAK,EAAED;AAA3B,GAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;AAChBT,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;AAC3B,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIV,CAAT,IAAcU,GAAd,EAAmB,IAAIV,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACiB,cAAP,CAAsBC,IAAtB,CAA2BJ,GAA3B,EAAgCV,CAAhC,CAAvB,EAA2DL,eAAe,CAACiB,MAAD,EAASF,GAAT,EAAcV,CAAd,CAAf;;AAC/FM,EAAAA,kBAAkB,CAACM,MAAD,EAASF,GAAT,CAAlB;;AACA,SAAOE,MAAP;AACH,CAND;;AAOAhB,MAAM,CAACO,cAAP,CAAsBY,OAAtB,EAA+B,YAA/B,EAA6C;AAAEP,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAO,OAAO,CAACC,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAIC,KAAK,GAAGR,YAAY,CAACS,OAAO,CAAC,OAAD,CAAR,CAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,OAAO,CAACC,eAAR,GAA0B,UAAUG,IAAV,EAAgBC,cAAhB,EAAgCC,QAAhC,EAA0C;AAChE,MAAIC,EAAE,GAAGL,KAAK,CAACM,QAAN,EAAT;AAAA,MAA2BC,YAAY,GAAGF,EAAE,CAAC,CAAD,CAA5C;AAAA,MAAiDG,eAAe,GAAGH,EAAE,CAAC,CAAD,CAArE;;AACAL,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAY;AACxB,QAAI,CAACF,YAAD,IAAiB,OAAOL,IAAP,KAAgB,WAArC,EAAkD;AAC9C,UAAI;AACA;AAChB;AACA;AACA;AACgB,YAAIQ,eAAe,GAAG,IAAIR,IAAI,CAACS,SAAL,CAAeC,YAAnB,CAAgC;AAClDC,UAAAA,SAAS,EAAEV;AADuC,SAAhC,CAAtB,CALA,CAQA;;AACAO,QAAAA,eAAe,CAACI,OAAhB;AACA;AAChB;AACA;;AACgBJ,QAAAA,eAAe,CAACK,EAAhB,CAAmB,QAAnB,EAA6B,UAAUC,MAAV,EAAkB;AAC3C,cAAIZ,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACY,MAAD,CAAR;AACH;AACJ,SAJD;AAKAR,QAAAA,eAAe,CAACE,eAAD,CAAf;AACH,OAnBD,CAoBA,OAAOO,CAAP,EAAU;AACNC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;AACJ,GA1BD,EA0BG,CAACV,YAAD,EAAeJ,cAAf,EAA+BC,QAA/B,EAAyCF,IAAzC,CA1BH;AA2BH,CA7BD","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useViewSelector = void 0;\nvar React = __importStar(require(\"react\"));\n/**\n * See documentation: [useViewSelector](https://justinmahar.github.io/react-use-analytics-api/useViewSelector)\n *\n * This hook renders a [ViewSelector](https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#viewselector)\n * into a container on the page using the [Google Analytics Embed API](https://justinmahar.github.io/react-use-analytics-api/useAnalyticsApi).\n *\n * The view selector can be used to change the Google Analytics view for data queries when [rendering charts](https://justinmahar.github.io/react-use-analytics-api/useDataChart).\n *\n * @param gapi The [Google Analytics Embed API](https://justinmahar.github.io/react-use-analytics-api/useAnalyticsApi). When `undefined`, nothing is rendered.\n * @param viewSelectorId The ID of the DOM element to render the view selector to.\n * @param onChange Called with the selected `viewId` whenever the view selection changes. Will be called immediately.\n */\nexports.useViewSelector = function (gapi, viewSelectorId, onChange) {\n    var _a = React.useState(), viewSelector = _a[0], setViewSelector = _a[1];\n    React.useEffect(function () {\n        if (!viewSelector && typeof gapi !== 'undefined') {\n            try {\n                /**\n                 * Create a new ViewSelector instance to be rendered inside of an\n                 * element with the id provided.\n                 */\n                var newViewSelector = new gapi.analytics.ViewSelector({\n                    container: viewSelectorId,\n                });\n                // Render the view selector to the page.\n                newViewSelector.execute();\n                /**\n                 * Render the dataChart on the page whenever a new view is selected.\n                 */\n                newViewSelector.on('change', function (viewId) {\n                    if (onChange) {\n                        onChange(viewId);\n                    }\n                });\n                setViewSelector(newViewSelector);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n    }, [viewSelector, viewSelectorId, onChange, gapi]);\n};\n"]},"metadata":{},"sourceType":"script"}