{"ast":null,"code":"import _classCallCheck from\"/Users/kassimbashir/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kassimbashir/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kassimbashir/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kassimbashir/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{AnalyticsDashboard}from\"react-analytics-charts\";import{SessionsByDateChart,ActiveUsersChart,SessionsByHourChart}from\"react-analytics-charts\";var MyAnalyticsDashBoard=/*#__PURE__*/function(_React$Component){_inherits(MyAnalyticsDashBoard,_React$Component);var _super=_createSuper(MyAnalyticsDashBoard);function MyAnalyticsDashBoard(){_classCallCheck(this,MyAnalyticsDashBoard);return _super.apply(this,arguments);}_createClass(MyAnalyticsDashBoard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;this.interval=setInterval(function(){return _this.setState({time:Date.now()});},1000*60);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interval);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{style:{color:\"white\"}},/*#__PURE__*/React.createElement(AnalyticsDashboard,{authOptions:{clientId:\"647763592563-041vtakasol9jju6o7c0igso756ead2e.apps.googleusercontent.com\"},renderCharts:function renderCharts(gapi,viewId){var chartStyles={maxWidth:600};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SessionsByDateChart,{gapi:gapi,viewId:viewId,showPageViews:true,showUsers:true,style:chartStyles}),/*#__PURE__*/React.createElement(ActiveUsersChart,{gapi:gapi,viewId:viewId,days:7,activeUserDays:1,style:chartStyles}),/*#__PURE__*/React.createElement(SessionsByHourChart,{gapi:gapi,viewId:viewId,days:28,style:chartStyles,query:{ids:viewId,\"start-date\":\"20daysAgo\",\"end-date\":\"today\",metrics:\"ga:users\"}}));}}));}}]);return MyAnalyticsDashBoard;}(React.Component);export default MyAnalyticsDashBoard;","map":{"version":3,"sources":["/Users/kassimbashir/quickstart-react/src/MyAnalyticsDashBoard.js"],"names":["React","AnalyticsDashboard","SessionsByDateChart","ActiveUsersChart","SessionsByHourChart","MyAnalyticsDashBoard","interval","setInterval","setState","time","Date","now","clearInterval","color","clientId","gapi","viewId","chartStyles","maxWidth","ids","metrics","Component"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,wBAAnC,CACA,OACEC,mBADF,CAEEC,gBAFF,CAGEC,mBAHF,KAIO,wBAJP,C,GAMMC,CAAAA,oB,0TACJ,4BAAoB,gBAElB,KAAKC,QAAL,CAAgBC,WAAW,CAAE,UAAM,CACjC,MAAO,CAAA,KAAI,CAACC,QAAL,CAAc,CAAEC,IAAI,CAAEC,IAAI,CAACC,GAAL,EAAR,CAAd,CAAP,CACD,CAF0B,CAExB,KAAK,EAFmB,CAA3B,CAGD,C,oCACD,+BAAuB,CACrBC,aAAa,CAAC,KAAKN,QAAN,CAAb,CACD,C,sBACD,iBAAQ,CACR,mBACE,2BAAK,KAAK,CAAE,CAAEO,KAAK,CAAC,OAAR,CAAZ,eACA,oBAAC,kBAAD,EACE,WAAW,CAAE,CACXC,QAAQ,CACN,0EAFS,CADf,CAKE,YAAY,CAAE,sBAACC,IAAD,CAAOC,MAAP,CAAkB,CAC9B,GAAMC,CAAAA,WAAW,CAAG,CAClBC,QAAQ,CAAE,GADQ,CAApB,CAGA,mBACE,4CACE,oBAAC,mBAAD,EACE,IAAI,CAAEH,IADR,CAEE,MAAM,CAAEC,MAFV,CAGE,aAAa,KAHf,CAIE,SAAS,KAJX,CAKE,KAAK,CAAEC,WALT,EADF,cAQE,oBAAC,gBAAD,EACJ,IAAI,CAAEF,IADF,CAEJ,MAAM,CAAEC,MAFJ,CAGJ,IAAI,CAAE,CAHF,CAIJ,cAAc,CAAE,CAJZ,CAKJ,KAAK,CAAEC,WALH,EARF,cAeJ,oBAAC,mBAAD,EAAqB,IAAI,CAAEF,IAA3B,CAAiC,MAAM,CAAEC,MAAzC,CAAiD,IAAI,CAAE,EAAvD,CAA4D,KAAK,CAAEC,WAAnE,CACA,KAAK,CAAE,CACLE,GAAG,CAAEH,MADA,CAEL,aAAc,WAFT,CAGL,WAAY,OAHP,CAILI,OAAO,CAAE,UAJJ,CADP,EAfI,CADF,CA2BD,CApCH,EADA,CADF,CA0CG,C,kCArD8BpB,KAAK,CAACqB,S,EAwDzC,cAAehB,CAAAA,oBAAf","sourcesContent":["import React from \"react\";\nimport { AnalyticsDashboard } from \"react-analytics-charts\";\nimport {\n  SessionsByDateChart,\n  ActiveUsersChart,\n  SessionsByHourChart\n} from \"react-analytics-charts\";\n\nclass MyAnalyticsDashBoard extends React.Component {\n  componentDidMount() {\n    \n    this.interval = setInterval( () => {\n      return this.setState({ time: Date.now() })\n    }, 1000*60);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render(){\n  return (\n    <div style={{ color:\"white\" }}>\n    <AnalyticsDashboard\n      authOptions={{\n        clientId:\n          \"647763592563-041vtakasol9jju6o7c0igso756ead2e.apps.googleusercontent.com\",\n      }}\n      renderCharts={(gapi, viewId) => {\n        const chartStyles = {\n          maxWidth: 600,\n        };\n        return (\n          <div>\n            <SessionsByDateChart\n              gapi={gapi}\n              viewId={viewId}\n              showPageViews\n              showUsers\n              style={chartStyles}\n            />\n            <ActiveUsersChart\n        gapi={gapi}\n        viewId={viewId}\n        days={7}\n        activeUserDays={1}\n        style={chartStyles}\n      />\n      <SessionsByHourChart gapi={gapi} viewId={viewId} days={28}  style={chartStyles} \n      query={{\n        ids: viewId,\n        \"start-date\": \"20daysAgo\",\n        \"end-date\": \"today\",\n        metrics: \"ga:users\",\n       \n      }}\n      />\n          </div>\n        );\n      }}\n    />\n    </div>\n  );\n    }\n}\n\nexport default MyAnalyticsDashBoard;\n"]},"metadata":{},"sourceType":"module"}