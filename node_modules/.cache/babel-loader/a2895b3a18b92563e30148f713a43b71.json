{"ast":null,"code":"var _jsxFileName = \"/Users/kassimbashir/quickstart-react/src/DataChart.js\";\nimport * as React from \"react\";\nimport { useAnalyticsApi, useAuthorize, useDataChart, useSignOut, useViewSelector } from \"react-use-analytics-api\";\nexport function DataChart() {\n  var _authDiv$current, _authDiv$current$chil;\n\n  const {\n    ready,\n    gapi,\n    authorized,\n    error\n  } = useAnalyticsApi();\n  const [viewId, setViewId] = React.useState();\n  const viewSelectorContainerId = \"view-selector-container\";\n  useViewSelector(authorized ? gapi : undefined, viewSelectorContainerId, viewId => setViewId(viewId));\n  const query = {\n    ids: viewId,\n    \"start-date\": \"28daysAgo\",\n    \"end-date\": \"today\",\n    metrics: \"ga:sessions\",\n    dimensions: \"ga:date\"\n  };\n  const chart = {\n    container: \"data-chart-container\",\n    type: \"LINE\",\n    options: {\n      title: \"Sessions (28 Days)\"\n    }\n  };\n  useDataChart(authorized ? gapi : undefined, query, chart); // Workaround for API limitation - see useAuthorize docs\n\n  const authDiv = React.useRef(null);\n  const [authorizeCalled, setAuthorizeCalled] = React.useState(false);\n  const hasAuthElements = authDiv.current && (authDiv === null || authDiv === void 0 ? void 0 : (_authDiv$current = authDiv.current) === null || _authDiv$current === void 0 ? void 0 : (_authDiv$current$chil = _authDiv$current.children) === null || _authDiv$current$chil === void 0 ? void 0 : _authDiv$current$chil.length) > 0;\n  const authorize = useAuthorize(gapi, {\n    clientId,\n    container: \"authorize-container-id\"\n  });\n  const signOut = useSignOut(gapi);\n  React.useEffect(() => {\n    if (ready && !error && !authorizeCalled) {\n      authorize();\n      setAuthorizeCalled(true);\n    }\n  }, [ready, error, authorizeCalled, authorize]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, !ready && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }\n  }, \"Loading...\"), ready && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, authorized && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-chart\",\n    id: \"data-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: viewSelectorContainerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => signOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Sign Out\"))), !authorized && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: authDiv,\n    id: \"authorize-container-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), !hasAuthElements && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 36\n    }\n  }, \"\\uD83D\\uDD04 Refresh the page to sign in.\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, error.toString()));\n}","map":{"version":3,"sources":["/Users/kassimbashir/quickstart-react/src/DataChart.js"],"names":["React","useAnalyticsApi","useAuthorize","useDataChart","useSignOut","useViewSelector","DataChart","ready","gapi","authorized","error","viewId","setViewId","useState","viewSelectorContainerId","undefined","query","ids","metrics","dimensions","chart","container","type","options","title","authDiv","useRef","authorizeCalled","setAuthorizeCalled","hasAuthElements","current","children","length","authorize","clientId","signOut","useEffect","marginTop","toString"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  useAnalyticsApi,\n  useAuthorize,\n  useDataChart,\n  useSignOut,\n  useViewSelector,\n} from \"react-use-analytics-api\";\n\nexport function DataChart() {\n  const { ready, gapi, authorized, error } = useAnalyticsApi();\n  const [viewId, setViewId] = React.useState();\n  const viewSelectorContainerId = \"view-selector-container\";\n  useViewSelector(\n    authorized ? gapi : undefined,\n    viewSelectorContainerId,\n    (viewId) => setViewId(viewId)\n  );\n  const query = {\n    ids: viewId,\n    \"start-date\": \"28daysAgo\",\n    \"end-date\": \"today\",\n    metrics: \"ga:sessions\",\n    dimensions: \"ga:date\",\n  };\n  const chart = {\n    container: \"data-chart-container\",\n    type: \"LINE\",\n    options: {\n      title: \"Sessions (28 Days)\",\n    },\n  };\n  useDataChart(authorized ? gapi : undefined, query, chart);\n\n  // Workaround for API limitation - see useAuthorize docs\n  const authDiv = React.useRef(null);\n  const [authorizeCalled, setAuthorizeCalled] = React.useState(false);\n  const hasAuthElements =\n    authDiv.current && authDiv?.current?.children?.length > 0;\n\n  const authorize = useAuthorize(gapi, {\n    clientId,\n    container: \"authorize-container-id\",\n  });\n  const signOut = useSignOut(gapi);\n\n  React.useEffect(() => {\n    if (ready && !error && !authorizeCalled) {\n      authorize();\n      setAuthorizeCalled(true);\n    }\n  }, [ready, error, authorizeCalled, authorize]);\n\n  return (\n    <div>\n      {!ready && <div>Loading...</div>}\n      {ready && (\n        <div>\n          {authorized && (\n            <div>\n              <div style={{ marginTop: \"30px\" }}>\n                <div className=\"data-chart\" id=\"data-chart-container\" />\n              </div>\n              <div id={viewSelectorContainerId} />\n              <div>\n                <button onClick={() => signOut()}>Sign Out</button>\n              </div>\n            </div>\n          )}\n          {!authorized && (\n            <div>\n              <div ref={authDiv} id=\"authorize-container-id\"></div>\n              {!hasAuthElements && <div>ðŸ”„ Refresh the page to sign in.</div>}\n            </div>\n          )}\n        </div>\n      )}\n      {error && <div>{error.toString()}</div>}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}