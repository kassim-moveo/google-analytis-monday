{"ast":null,"code":"var _jsxFileName = \"/Users/kassimbashir/quickstart-react/src/MyAnalyticsDashBoard.js\";\nimport React from \"react\";\nimport { AnalyticsDashboard } from \"react-analytics-charts\";\nimport { SessionsByDateChart, ActiveUsersChart, SessionsByHourChart } from \"react-analytics-charts\";\n\nclass MyAnalyticsDashBoard extends React.Component {\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log(\"refreshing...\");\n      return this.setState({\n        time: Date.now()\n      });\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AnalyticsDashboard, {\n      authOptions: {\n        clientId: \"798387791418-1q56un70liaijau2sgl16014b4rdhoq2.apps.googleusercontent.com\"\n      },\n      renderCharts: (gapi, viewId) => {\n        const chartStyles = {\n          maxWidth: 600\n        };\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(SessionsByDateChart, {\n          gapi: gapi,\n          viewId: viewId,\n          showPageViews: true,\n          showUsers: true,\n          style: chartStyles,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ActiveUsersChart, {\n          gapi: gapi,\n          viewId: viewId,\n          days: 7,\n          activeUserDays: 1,\n          style: chartStyles,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(SessionsByHourChart, {\n          gapi: gapi,\n          viewId: viewId,\n          days: 28,\n          style: chartStyles,\n          query: {\n            ids: viewId,\n            \"start-date\": \"20daysAgo\",\n            \"end-date\": \"today\",\n            metrics: \"ga:users\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default MyAnalyticsDashBoard;","map":{"version":3,"sources":["/Users/kassimbashir/quickstart-react/src/MyAnalyticsDashBoard.js"],"names":["React","AnalyticsDashboard","SessionsByDateChart","ActiveUsersChart","SessionsByHourChart","MyAnalyticsDashBoard","Component","componentDidMount","interval","setInterval","console","log","setState","time","Date","now","componentWillUnmount","clearInterval","render","color","clientId","gapi","viewId","chartStyles","maxWidth","ids","metrics"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,mBAHF,QAIO,wBAJP;;AAMA,MAAMC,oBAAN,SAAmCL,KAAK,CAACM,SAAzC,CAAmD;AACjDC,EAAAA,iBAAiB,GAAG;AAElB,SAAKC,QAAL,GAAgBC,WAAW,CAAE,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,KAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAAR,OAAd,CAAP;AACD,KAH0B,EAGxB,IAHwB,CAA3B;AAID;;AACDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKT,QAAN,CAAb;AACD;;AACDU,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EACN;AAFS,OADf;AAKE,MAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC9B,cAAMC,WAAW,GAAG;AAClBC,UAAAA,QAAQ,EAAE;AADQ,SAApB;AAGA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,mBAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAEE,UAAA,MAAM,EAAEC,MAFV;AAGE,UAAA,aAAa,MAHf;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,KAAK,EAAEC,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAQE,oBAAC,gBAAD;AACJ,UAAA,IAAI,EAAEF,IADF;AAEJ,UAAA,MAAM,EAAEC,MAFJ;AAGJ,UAAA,IAAI,EAAE,CAHF;AAIJ,UAAA,cAAc,EAAE,CAJZ;AAKJ,UAAA,KAAK,EAAEC,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,eAeJ,oBAAC,mBAAD;AAAqB,UAAA,IAAI,EAAEF,IAA3B;AAAiC,UAAA,MAAM,EAAEC,MAAzC;AAAiD,UAAA,IAAI,EAAE,EAAvD;AAA4D,UAAA,KAAK,EAAEC,WAAnE;AACA,UAAA,KAAK,EAAE;AACLE,YAAAA,GAAG,EAAEH,MADA;AAEL,0BAAc,WAFT;AAGL,wBAAY,OAHP;AAILI,YAAAA,OAAO,EAAE;AAJJ,WADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAfI,CADF;AA2BD,OApCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AA0CG;;AAtD8C;;AAyDnD,eAAerB,oBAAf","sourcesContent":["import React from \"react\";\nimport { AnalyticsDashboard } from \"react-analytics-charts\";\nimport {\n  SessionsByDateChart,\n  ActiveUsersChart,\n  SessionsByHourChart\n} from \"react-analytics-charts\";\n\nclass MyAnalyticsDashBoard extends React.Component {\n  componentDidMount() {\n    \n    this.interval = setInterval( () => {\n      console.log(\"refreshing...\")\n      return this.setState({ time: Date.now() })\n    }, 5000 );\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render(){\n  return (\n    <div style={{ color:\"white\" }}>\n    <AnalyticsDashboard\n      authOptions={{\n        clientId:\n          \"798387791418-1q56un70liaijau2sgl16014b4rdhoq2.apps.googleusercontent.com\",\n      }}\n      renderCharts={(gapi, viewId) => {\n        const chartStyles = {\n          maxWidth: 600,\n        };\n        return (\n          <div>\n            <SessionsByDateChart\n              gapi={gapi}\n              viewId={viewId}\n              showPageViews\n              showUsers\n              style={chartStyles}\n            />\n            <ActiveUsersChart\n        gapi={gapi}\n        viewId={viewId}\n        days={7}\n        activeUserDays={1}\n        style={chartStyles}\n      />\n      <SessionsByHourChart gapi={gapi} viewId={viewId} days={28}  style={chartStyles} \n      query={{\n        ids: viewId,\n        \"start-date\": \"20daysAgo\",\n        \"end-date\": \"today\",\n        metrics: \"ga:users\",\n       \n      }}\n      />\n          </div>\n        );\n      }}\n    />\n    </div>\n  );\n    }\n}\n\nexport default MyAnalyticsDashBoard;\n"]},"metadata":{},"sourceType":"module"}