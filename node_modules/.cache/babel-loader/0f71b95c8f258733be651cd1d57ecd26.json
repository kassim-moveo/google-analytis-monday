{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAnalyticsApi = exports.readyEvent = exports.authorizedEvent = exports.apiStateEmitter = exports.apiSingleton = void 0;\n\nvar events_1 = require(\"events\");\n\nvar React = __importStar(require(\"react\"));\n/**\n * Contains `gapi` and tracks whether the script was requested and if we're authorized.\n *\n * - `scriptRequested` - Type: boolean - False when the script has not been requested yet. True otherwise (script is loading).\n * - `authorized` - Type: boolean - True when authorized, false otherwise.\n * - `gapi` - Type: [GoogleAnalyticsEmbedAPI](https://developers.google.com/analytics/devguides/reporting/embed/v1) &#124; undefined - The API, or undefined if it's not loaded and ready.\n */\n\n\nexports.apiSingleton = {\n  scriptRequested: false,\n  authorized: false,\n  gapi: undefined\n}; // Check if we have it loaded and ready, and set singleton up.\n\nif (typeof window !== 'undefined') {\n  var win = window;\n\n  if (win.gapi && win.gapi.analytics) {\n    // At this point, we've requested the script, but it may not be fully loaded yet.\n    exports.apiSingleton.scriptRequested = true; // If we've fully loaded it (all dependencies we need are present), set it.\n\n    exports.apiSingleton.gapi = !!win.gapi.analytics.ViewSelector && !!win.gapi.analytics.auth && !!((_a = win.gapi.analytics) === null || _a === void 0 ? void 0 : _a.googleCharts.DataChart) ? win.gapi : undefined; // Set whether we're authorized\n\n    exports.apiSingleton.authorized = win.gapi.analytics.auth ? win.gapi.analytics.auth.isAuthorized() : false;\n  }\n}\n/**\n * Used to keep hooks synchronized.\n *\n * Events:\n * - on `authorized` - `(isAuthorized) => void` - The user is signed in or signed out.\n * - on `ready` - `() => void` - The API is loaded and ready.\n */\n\n\nexports.apiStateEmitter = new events_1.EventEmitter();\nexports.apiStateEmitter.setMaxListeners(100);\n/** The user is signed in or signed out. */\n\nexports.authorizedEvent = 'authorized';\n/** The API is loaded and ready. */\n\nexports.readyEvent = 'ready';\n/**\n * See documentation: [useAnalyticsApi](https://justinmahar.github.io/react-use-analytics-api/useAnalyticsApi)\n *\n *  Use this hook to load and access the [Google Analytics Embed API](https://ga-dev-tools.appspot.com/embed-api/) (`gapi`).\n *\n * The hook will run the [library loading script from Google](https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-2), grab the API out from `window.gapi` (where Google loads it to), and store it as a singleton.\n * It will reference the singleton thereafter, keeping `window` interaction to a minimum.\n *\n * State changes that happen outside of React (such as API readiness and [authorization](https://justinmahar.github.io/react-use-analytics-api/useAuthorize)) are synchronized across all hooks via a singleton emitter effect. This allows you to use the hook in multiple places while keeping them all in sync.\n */\n\nexports.useAnalyticsApi = function () {\n  var _a = React.useState(exports.apiSingleton.gapi),\n      gapi = _a[0],\n      setGapi = _a[1];\n\n  var _b = React.useState(typeof exports.apiSingleton.gapi !== 'undefined'),\n      hookReady = _b[0],\n      setHookReady = _b[1];\n\n  var _c = React.useState(exports.apiSingleton.authorized),\n      authorized = _c[0],\n      setAuthorized = _c[1];\n\n  var _d = React.useState(undefined),\n      error = _d[0],\n      setError = _d[1];\n\n  React.useEffect(function () {\n    var aborted = false;\n\n    var authorizedListener = function (isAuthorized) {\n      if (!aborted) {\n        setAuthorized(isAuthorized);\n      }\n    };\n\n    exports.apiStateEmitter.on(exports.authorizedEvent, authorizedListener);\n\n    var readyListener = function () {\n      if (!aborted) {\n        setGapi(exports.apiSingleton.gapi);\n        setHookReady(true);\n      }\n    };\n\n    exports.apiStateEmitter.on(exports.readyEvent, readyListener);\n    return function () {\n      aborted = true;\n      exports.apiStateEmitter.off(exports.authorizedEvent, authorizedListener);\n      exports.apiStateEmitter.off(exports.readyEvent, readyListener);\n    };\n  });\n  React.useEffect(function () {\n    try {\n      if (typeof window !== 'undefined') {\n        var win_1 = window; // Only load the script once.\n\n        if (!exports.apiSingleton.scriptRequested) {\n          exports.apiSingleton.scriptRequested = true; // Call the code from Google to load the API into window.\n\n          loadGoogleApi(); // At this point, gapi has been partially loaded into window.\n          // We're still loading analytics. Google adds an emitter\n          // called ready() that will fire when it's fully loaded.\n\n          if (win_1.gapi && win_1.gapi.analytics && win_1.gapi.analytics.ready) {\n            win_1.gapi.analytics.ready(function () {\n              // At this point, we can use the Analytics Embed API!\n              exports.apiSingleton.gapi = win_1.gapi; // Set if we're already authorized\n\n              if (win_1.gapi.analytics.auth.isAuthorized()) {\n                exports.apiSingleton.authorized = true;\n              } // Update the hook's state\n\n\n              setGapi(exports.apiSingleton.gapi);\n              setHookReady(true);\n              setAuthorized(exports.apiSingleton.authorized); // This hook is ready, but we need to update other hooks subscribed\n              // to the singleton emitter\n\n              exports.apiStateEmitter.emit(exports.readyEvent);\n              exports.apiStateEmitter.emit(exports.authorizedEvent, exports.apiSingleton.authorized);\n            });\n          } else {\n            throw new Error(\"Couldn't add ready listener to gapi analytics.\");\n          }\n        }\n      }\n    } catch (e) {\n      setError(e);\n    }\n  }, []);\n  React.useEffect(function () {\n    // Ensure we stay current in case another hook has made changes\n    if (!hookReady && !!exports.apiSingleton.gapi) {\n      setGapi(exports.apiSingleton.gapi);\n      setHookReady(true);\n    }\n\n    if (authorized !== exports.apiSingleton.authorized) {\n      setAuthorized(exports.apiSingleton.authorized);\n    }\n  });\n  return {\n    ready: hookReady,\n    gapi: gapi,\n    error: error,\n    authorized: !!authorized\n  };\n};\n/**\n * Ported to TypeScript from:\n * https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-2\n */\n\n\nvar loadGoogleApi = function () {\n  if (typeof window !== 'undefined') {\n    (function (w, d, s) {\n      var g = w.gapi || (w.gapi = {});\n      g.analytics = {\n        q: [],\n        ready: function (cb) {\n          this.q.push(cb);\n        }\n      };\n      var js = d.createElement(s);\n      var fjs = d.getElementsByTagName(s)[0];\n      js.src = 'https://apis.google.com/js/platform.js';\n      fjs.parentNode.insertBefore(js, fjs);\n\n      js.onload = function () {\n        g.load('analytics');\n      };\n    })(window, document, 'script');\n  }\n};","map":{"version":3,"sources":["/Users/kassimbashir/welcome-apps/apps/quickstart-react/quickstart-react/node_modules/react-use-analytics-api/dist/hooks/useAnalyticsApi.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","_a","exports","useAnalyticsApi","readyEvent","authorizedEvent","apiStateEmitter","apiSingleton","events_1","require","React","scriptRequested","authorized","gapi","window","win","analytics","ViewSelector","auth","googleCharts","DataChart","isAuthorized","EventEmitter","setMaxListeners","useState","setGapi","_b","hookReady","setHookReady","_c","setAuthorized","_d","error","setError","useEffect","aborted","authorizedListener","on","readyListener","off","win_1","loadGoogleApi","ready","emit","Error","e","w","d","s","g","q","cb","push","js","createElement","fjs","getElementsByTagName","src","parentNode","insertBefore","onload","load","document"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAnalyticsApi = exports.readyEvent = exports.authorizedEvent = exports.apiStateEmitter = exports.apiSingleton = void 0;\nvar events_1 = require(\"events\");\nvar React = __importStar(require(\"react\"));\n/**\n * Contains `gapi` and tracks whether the script was requested and if we're authorized.\n *\n * - `scriptRequested` - Type: boolean - False when the script has not been requested yet. True otherwise (script is loading).\n * - `authorized` - Type: boolean - True when authorized, false otherwise.\n * - `gapi` - Type: [GoogleAnalyticsEmbedAPI](https://developers.google.com/analytics/devguides/reporting/embed/v1) &#124; undefined - The API, or undefined if it's not loaded and ready.\n */\nexports.apiSingleton = {\n    scriptRequested: false,\n    authorized: false,\n    gapi: undefined,\n};\n// Check if we have it loaded and ready, and set singleton up.\nif (typeof window !== 'undefined') {\n    var win = window;\n    if (win.gapi && win.gapi.analytics) {\n        // At this point, we've requested the script, but it may not be fully loaded yet.\n        exports.apiSingleton.scriptRequested = true;\n        // If we've fully loaded it (all dependencies we need are present), set it.\n        exports.apiSingleton.gapi =\n            !!win.gapi.analytics.ViewSelector && !!win.gapi.analytics.auth && !!((_a = win.gapi.analytics) === null || _a === void 0 ? void 0 : _a.googleCharts.DataChart)\n                ? win.gapi\n                : undefined;\n        // Set whether we're authorized\n        exports.apiSingleton.authorized = win.gapi.analytics.auth ? win.gapi.analytics.auth.isAuthorized() : false;\n    }\n}\n/**\n * Used to keep hooks synchronized.\n *\n * Events:\n * - on `authorized` - `(isAuthorized) => void` - The user is signed in or signed out.\n * - on `ready` - `() => void` - The API is loaded and ready.\n */\nexports.apiStateEmitter = new events_1.EventEmitter();\nexports.apiStateEmitter.setMaxListeners(100);\n/** The user is signed in or signed out. */\nexports.authorizedEvent = 'authorized';\n/** The API is loaded and ready. */\nexports.readyEvent = 'ready';\n/**\n * See documentation: [useAnalyticsApi](https://justinmahar.github.io/react-use-analytics-api/useAnalyticsApi)\n *\n *  Use this hook to load and access the [Google Analytics Embed API](https://ga-dev-tools.appspot.com/embed-api/) (`gapi`).\n *\n * The hook will run the [library loading script from Google](https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-2), grab the API out from `window.gapi` (where Google loads it to), and store it as a singleton.\n * It will reference the singleton thereafter, keeping `window` interaction to a minimum.\n *\n * State changes that happen outside of React (such as API readiness and [authorization](https://justinmahar.github.io/react-use-analytics-api/useAuthorize)) are synchronized across all hooks via a singleton emitter effect. This allows you to use the hook in multiple places while keeping them all in sync.\n */\nexports.useAnalyticsApi = function () {\n    var _a = React.useState(exports.apiSingleton.gapi), gapi = _a[0], setGapi = _a[1];\n    var _b = React.useState(typeof exports.apiSingleton.gapi !== 'undefined'), hookReady = _b[0], setHookReady = _b[1];\n    var _c = React.useState(exports.apiSingleton.authorized), authorized = _c[0], setAuthorized = _c[1];\n    var _d = React.useState(undefined), error = _d[0], setError = _d[1];\n    React.useEffect(function () {\n        var aborted = false;\n        var authorizedListener = function (isAuthorized) {\n            if (!aborted) {\n                setAuthorized(isAuthorized);\n            }\n        };\n        exports.apiStateEmitter.on(exports.authorizedEvent, authorizedListener);\n        var readyListener = function () {\n            if (!aborted) {\n                setGapi(exports.apiSingleton.gapi);\n                setHookReady(true);\n            }\n        };\n        exports.apiStateEmitter.on(exports.readyEvent, readyListener);\n        return function () {\n            aborted = true;\n            exports.apiStateEmitter.off(exports.authorizedEvent, authorizedListener);\n            exports.apiStateEmitter.off(exports.readyEvent, readyListener);\n        };\n    });\n    React.useEffect(function () {\n        try {\n            if (typeof window !== 'undefined') {\n                var win_1 = window;\n                // Only load the script once.\n                if (!exports.apiSingleton.scriptRequested) {\n                    exports.apiSingleton.scriptRequested = true;\n                    // Call the code from Google to load the API into window.\n                    loadGoogleApi();\n                    // At this point, gapi has been partially loaded into window.\n                    // We're still loading analytics. Google adds an emitter\n                    // called ready() that will fire when it's fully loaded.\n                    if (win_1.gapi && win_1.gapi.analytics && win_1.gapi.analytics.ready) {\n                        win_1.gapi.analytics.ready(function () {\n                            // At this point, we can use the Analytics Embed API!\n                            exports.apiSingleton.gapi = win_1.gapi;\n                            // Set if we're already authorized\n                            if (win_1.gapi.analytics.auth.isAuthorized()) {\n                                exports.apiSingleton.authorized = true;\n                            }\n                            // Update the hook's state\n                            setGapi(exports.apiSingleton.gapi);\n                            setHookReady(true);\n                            setAuthorized(exports.apiSingleton.authorized);\n                            // This hook is ready, but we need to update other hooks subscribed\n                            // to the singleton emitter\n                            exports.apiStateEmitter.emit(exports.readyEvent);\n                            exports.apiStateEmitter.emit(exports.authorizedEvent, exports.apiSingleton.authorized);\n                        });\n                    }\n                    else {\n                        throw new Error(\"Couldn't add ready listener to gapi analytics.\");\n                    }\n                }\n            }\n        }\n        catch (e) {\n            setError(e);\n        }\n    }, []);\n    React.useEffect(function () {\n        // Ensure we stay current in case another hook has made changes\n        if (!hookReady && !!exports.apiSingleton.gapi) {\n            setGapi(exports.apiSingleton.gapi);\n            setHookReady(true);\n        }\n        if (authorized !== exports.apiSingleton.authorized) {\n            setAuthorized(exports.apiSingleton.authorized);\n        }\n    });\n    return { ready: hookReady, gapi: gapi, error: error, authorized: !!authorized };\n};\n/**\n * Ported to TypeScript from:\n * https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-2\n */\nvar loadGoogleApi = function () {\n    if (typeof window !== 'undefined') {\n        (function (w, d, s) {\n            var g = w.gapi || (w.gapi = {});\n            g.analytics = {\n                q: [],\n                ready: function (cb) {\n                    this.q.push(cb);\n                },\n            };\n            var js = d.createElement(s);\n            var fjs = d.getElementsByTagName(s)[0];\n            js.src = 'https://apis.google.com/js/platform.js';\n            fjs.parentNode.insertBefore(js, fjs);\n            js.onload = function () {\n                g.load('analytics');\n            };\n        })(window, document, 'script');\n    }\n};\n"]},"metadata":{},"sourceType":"script"}